var app=angular.module("app",["ui.router","moment-picker","angularjs-dropdown-multiselect"]),module;const{csv,select,selectAll,selection}=d3;app.config(["$stateProvider","$urlRouterProvider",function(n){n.state("Group",{url:"/Group",templateUrl:"Schedule/Group"}).state("Individual",{url:"/Individual",templateUrl:"Schedule/Individual"}).state("Future",{url:"/Future",templateUrl:"Schedule/Future"}).state("Test",{url:"/Test",templateUrl:"Schedule/Test"})}]);app.run(["$http","$window",function(n){n.defaults.headers.common["X-Requested-With"]="XMLHttpRequest";n.defaults.headers.common.__RequestVerificationToken=$("input[name=__RequestVerificationToken]").val()}]);app.service("appService",["$http",function(n){this.GetAllSchedules=t=>n.post("Schedule/GetAllSchedules",t);this.GetAllOwnedSchedules=t=>n.post("Schedule/GetAllOwnedSchedules",t);this.GetAllReferredSchedules=t=>n.post("Schedule/GetAllReferredSchedules",t);this.UpdateOwnedSchedules=t=>n.post("Schedule/UpdateOwnedSchedules",t);this.DeleteOwnedSchedules=t=>n.post("Schedule/DeleteOwnedSchedules",t);this.GetAllEmployeesByRole=t=>n.post("Schedule/GetAllEmployeesByRole",t)}]);app.factory("dataservice",function(){function t(t){n.Owned=t}function i(t){n.Referred=t}function r(){return n}var n={};return{setOwned:t,setReferred:i,get:r}});app.controller("ScheduleCtrl",["$scope","$location","appService","$rootScope","$q","dataservice",function(n,t,i,r,u,f){i.GetAllSchedules({}).then(t=>{n.data=t.data});i.GetAllOwnedSchedules({}).then(n=>{f.setOwned(n.data)});i.GetAllReferredSchedules({}).then(n=>{f.setReferred(n.data)});t.path("/Group")}]);app.controller("GroupCtrl",["$scope","$location","appService","$rootScope","$q","dataservice",function(n,t,i,r,u,f){n.example1model=[];n.example1data=[{id:1,label:"David"},{id:2,label:"Jhon"},{id:3,label:"Danny"}];n.yourEvents={onSelectionChanged:function(){let t="";for(let i=0;i!==n.example1model.length;i++)t+=n.example1model[i].label,i!==n.example1model.length-1&&(t+=", "),n.modal.member=t},onDeselectAll:function(){n.modal.member=""}};n.passChosen=()=>{n.example1model=[];for(let t of n.employees)n.modal.member.includes(t.label)&&n.example1model.push(t)};n.data=f.get();n.deletedIds={schedule_ids:[],milestones_ids:[]};i.GetAllEmployeesByRole({}).then(t=>{n.employees=t.data;let i=1;for(let n of n.employees)n.id=i,n.label=n.name,i++});n.UpdateSchedules=()=>{let t=Promise.resolve("a"),r=Promise.resolve("b");n.data.Owned.Group.length!==0&&(t=i.UpdateOwnedSchedules({schedules:n.data.Owned.Group}).then(()=>{}).catch(()=>{alert("Error")}));(n.deletedIds.schedule_ids.length!==0||n.deletedIds.milestones_ids.length!==0)&&(r=i.DeleteOwnedSchedules({schedules:n.deletedIds.schedule_ids,milestones:n.deletedIds.milestones_ids}).then(()=>{}).catch(()=>{alert("Error")}));u.all([t,r]).then(()=>{i.GetAllOwnedSchedules({}).then(t=>{f.setOwned(t.data),n.deletedIds={schedule_ids:[],milestones_ids:[]}}),i.GetAllReferredSchedules({}).then(n=>{f.setReferred(n.data)})})};n.addSchedule=()=>{n.data.Owned.Group.splice(n.data.Owned.Group.length,0,{type:2,milestones:[]}),n.modal=n.data.Owned.Group[n.data.Owned.Group.length-1]};n.addMilestone=()=>{n.modal.milestones.splice(n.modal.milestones.length,0,{schedule_id:n.modal.id})};n.removeSchedule=()=>{let t=n.modal.id;if(t){for(let t of n.modal.milestones)n.deletedIds.milestones_ids.push(t.id);n.deletedIds.schedule_ids.push(t)}n.data.Owned.Group.splice(n.data.Owned.Group.indexOf(n.modal),1)};n.removeMilestone=t=>{let i=n.modal.milestones[t].id;i&&n.deletedIds.milestones_ids.push(i);n.modal.milestones.splice(t,1)}}]);app.controller("IndividualCtrl",["$scope","$location","appService","$rootScope","$q","dataservice",function(n,t,i,r,u,f){n.data=f.get();n.deletedIds={schedule_ids:[],milestones_ids:[]};n.addSchedule=t=>{n.data.Owned.Individual.splice(n.data.Owned.Individual.length,0,{type:3,milestones:[],parent_id:t}),n.modal=n.data.Owned.Individual[n.data.Owned.Individual.length-1]};n.addMilestone=()=>{n.modal.milestones.splice(n.modal.milestones.length,0,{schedule_id:n.modal.id})};n.removeSchedule=()=>{let t=n.modal.id;if(t){for(let t of n.modal.milestones)n.deletedIds.milestones_ids.push(t.id);n.deletedIds.schedule_ids.push(t)}n.data.Owned.Individual.splice(n.data.Owned.Individual.indexOf(n.modal),1)};n.removeMilestone=t=>{let i=n.modal.milestones[t].id;i&&n.deletedIds.milestones_ids.push(i);n.modal.milestones.splice(t,1)};n.UpdateSchedules=()=>{let t=Promise.resolve("a"),r=Promise.resolve("b");n.data.Owned.Individual.length!==0&&(t=i.UpdateOwnedSchedules({schedules:n.data.Owned.Individual}).then(()=>{}).catch(()=>{alert("Error")}));(n.deletedIds.schedule_ids.length!==0||n.deletedIds.milestones_ids.length!==0)&&(r=i.DeleteOwnedSchedules({schedules:n.deletedIds.schedule_ids,milestones:n.deletedIds.milestones_ids}).then(()=>{}).catch(()=>{alert("Error")}));u.all([t,r]).then(()=>{i.GetAllOwnedSchedules({}).then(t=>{f.setOwned(t.data),n.deletedIds={schedule_ids:[],milestones_ids:[]}})})}}]);app.controller("FutureCtrl",["$scope","$location","appService","$rootScope","$q","dataservice",function(n,t,i,r,u,f){n.data=f.get()}]);app.controller("TestCtrl",["$scope","$location","appService","$rootScope","$q","dataservice",function(n,t,i,r,u,f){n.example1model=[];n.example1data=[{id:1,label:"David"},{id:2,label:"Jhon"},{id:3,label:"Danny"}];n.yourEvents={onSelectionChanged:function(){let t="";for(let i=0;i!==n.example1model.length;i++)t+=n.example1model[i].label,i!==n.example1model.length-1&&(t+=", "),n.modal.member=t},onDeselectAll:function(){n.modal.member=""}};n.passChosen=()=>{n.example1model=[];for(let t of n.employees)n.modal.member.includes(t.label)&&n.example1model.push(t)};n.data=f.get();n.deletedIds={schedule_ids:[],milestones_ids:[]};i.GetAllEmployeesByRole({}).then(t=>{n.employees=t.data;let i=1;for(let n of n.employees)n.id=i,n.label=n.name,i++});n.UpdateSchedules=()=>{let t=Promise.resolve("a"),r=Promise.resolve("b");n.data.Owned.Group.length!==0&&(t=i.UpdateOwnedSchedules({schedules:n.data.Owned.Group}).then(()=>{}).catch(()=>{alert("Error")}));(n.deletedIds.schedule_ids.length!==0||n.deletedIds.milestones_ids.length!==0)&&(r=i.DeleteOwnedSchedules({schedules:n.deletedIds.schedule_ids,milestones:n.deletedIds.milestones_ids}).then(()=>{}).catch(()=>{alert("Error")}));u.all([t,r]).then(()=>{i.GetAllOwnedSchedules({}).then(t=>{f.setOwned(t.data),n.deletedIds={schedule_ids:[],milestones_ids:[]}}),i.GetAllReferredSchedules({}).then(n=>{f.setReferred(n.data)})})};n.addSchedule=()=>{n.data.Owned.Group.splice(n.data.Owned.Group.length,0,{type:2,milestones:[]}),n.modal=n.data.Owned.Group[n.data.Owned.Group.length-1]};n.addMilestone=()=>{n.modal.milestones.splice(n.modal.milestones.length,0,{schedule_id:n.modal.id})};n.removeSchedule=()=>{let t=n.modal.id;if(t){for(let t of n.modal.milestones)n.deletedIds.milestones_ids.push(t.id);n.deletedIds.schedule_ids.push(t)}n.data.Owned.Group.splice(n.data.Owned.Group.indexOf(n.modal),1)};n.removeMilestone=t=>{let i=n.modal.milestones[t].id;i&&n.deletedIds.milestones_ids.push(i);n.modal.milestones.splice(t,1)};const e=["https://gist.githubusercontent.com/","curran/","a08a1080b88344b0c8a7/","raw/0e7a9b0a5d22642a06d3d5b9bcbad9890c8ee534/","iris.csv",].join(""),o=n=>(n.sepal_length=+n.sepal_length,n.sepal_width=+n.sepal_width,n.petal_length=+n.petal_length,n.petal_width=+n.petal_width,n);n.$on("ngRepeatFinished",function(){})}]);module=app.directive("onFinishRender",function(n){return{restrict:"A",link:function(t,i,r){t.$last===!0&&n(function(){t.$emit(r.onFinishRender)})}}});